// Code generated by "stringer -type=LoadMode ."; DO NOT EDIT.

package packages

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NeedName-1]
	_ = x[NeedFiles-2]
	_ = x[NeedCompiledGoFiles-4]
	_ = x[NeedImports-8]
	_ = x[NeedDeps-16]
	_ = x[NeedExportsFile-32]
	_ = x[NeedTypes-64]
	_ = x[NeedSyntax-128]
	_ = x[NeedTypesInfo-256]
	_ = x[NeedTypesSizes-512]
}

const (
	_LoadMode_name_0 = "NeedNameNeedFiles"
	_LoadMode_name_1 = "NeedCompiledGoFiles"
	_LoadMode_name_2 = "NeedImports"
	_LoadMode_name_3 = "NeedDeps"
	_LoadMode_name_4 = "NeedExportsFile"
	_LoadMode_name_5 = "NeedTypes"
	_LoadMode_name_6 = "NeedSyntax"
	_LoadMode_name_7 = "NeedTypesInfo"
	_LoadMode_name_8 = "NeedTypesSizes"
)

var (
	_LoadMode_index_0 = [...]uint8{0, 8, 17}
)

func (i LoadMode) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _LoadMode_name_0[_LoadMode_index_0[i]:_LoadMode_index_0[i+1]]
	case i == 4:
		return _LoadMode_name_1
	case i == 8:
		return _LoadMode_name_2
	case i == 16:
		return _LoadMode_name_3
	case i == 32:
		return _LoadMode_name_4
	case i == 64:
		return _LoadMode_name_5
	case i == 128:
		return _LoadMode_name_6
	case i == 256:
		return _LoadMode_name_7
	case i == 512:
		return _LoadMode_name_8
	default:
		return "LoadMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
